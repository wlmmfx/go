<?php

/**
 * Created by PhpStorm.
 * User: Tinywan
 * Date: 2017/8/31
 * Time: 16:13
 * Mail: Overcome.wan@Gmail.com
 */

namespace app\backend\controller\auth;

use app\common\controller\BaseBackendController;
use houdunwang\arr\Arr;
use think\Request;

class AuthGroupController extends BaseBackendController
{
    protected $db;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new \app\common\model\AuthGroup();  //对象存储在一个db属性中
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function groupList()
    {
        $groupInfo = db('auth_group')->select();
        $this->assign('lists', $groupInfo);
        return $this->fetch();
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request $request
     * @return \think\Response
     */
    public function store(Request $request)
    {
        if ($request->isPost()) {
            $res = $this->db->store(input('post.'));
            if ($res["valid"]) {
                $this->success($res["msg"], "backend/auth.auth_group/grouplist");
                exit;
            } else {
                $this->error($res["msg"]);
                exit;
            }
        }
    }

    /**
     * 编辑数据.
     * @param  int $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 删除指定资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function delete()
    {
        if (request()->isPost()) {
            $delGroup = db('auth_group')->delete(input("param.id"));
            if ($delGroup) {
                return json(['status' => 200, 'msg' => 'success']);
            } else {
                return json(['status' => 500, 'msg' => 'fail']);
            }
        }
        return json(['status' => 403, 'msg' => 'forbidden']);
    }

    /**
     * 用户组添加规则
     */
    public function addRules()
    {
        if (request()->isPost()) {
            $data = input('post.');
            if ($data["rules"]) {
                $data["rules"] = implode(',', $data["rules"]);
                $res = db('auth_group')->where('id', $data["groupId"])->setField('rules', $data["rules"]);
                // 注意：当使用“===”判断时，由于判断了变量的类型，0 和 false就不相等了，问题解决
                if ($res !== false) {
                    add_operation_log('用户组添加规则成功');
                    $this->success('用户组添加规则成功', "backend/auth.auth_group/grouplist");
                    exit;
                } else {
                    add_operation_log('用户组添加规则失败');
                    $this->success('用户组添加规则失败');
                    exit;
                }

            }
        }
        $id = input('param.id');
        $groups = db('auth_group')->where('id', $id)->find();
        $allRules = Arr::tree(db('auth_rule')->select(), 'title', $fieldPri = 'id', $fieldPid = 'pid');
        $checkedRules = [];
        foreach ($allRules as $value) {
            if (in_array($value['id'], explode(',', $groups['rules']))) {
                $value['access'] = '1';
            } else {
                $value['access'] = '0';
            }
            $checkedRules[] = $value;
        }

        $this->assign('groupTitle', $groups['title']);
        $this->assign('groupId', $id);
        $this->assign('allRules', $checkedRules);
        return $this->fetch();
    }

    /**
     * 用户组删除规则
     */
    public function delRules()
    {
        if (request()->isPost()) {
            halt($_POST);

        }
        $id = input('param.id');
        $groupTitle = db('auth_group')->where('id', $id)->find()['title'];
        $allRules = Arr::tree(db('auth_rule')->select(), 'title', $fieldPri = 'id', $fieldPid = 'pid');
        $this->assign('groupTitle', $groupTitle);
        $this->assign('allRules', $allRules);
        return $this->fetch();
    }
}