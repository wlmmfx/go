<?php
/** .-----------------------------------------------------------------------------------------------------------------
 * |  Github: https://github.com/Tinywan
 * |  Blog: http://www.cnblogs.com/Tinywan
 * |-------------------------------------------------------------------------------------------------------------------
 * |  Author: Tinywan(ShaoBo Wan)
 * |  DateTime: 2017/12/21 14:01
 * |  Mail: Overcome.wan@Gmail.com
 * '------------------------------------------------------------------------------------------------------------------*/

namespace app\business\controller;


use app\common\controller\BaseFrontendController;
use app\common\model\OpenUser;
use think\Db;

class UserController extends BaseFrontendController
{
    protected $open_user_db;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->open_user_db = new OpenUser();
    }

    // 我的主页
    public function home()
    {
        $userId = input('param.id');
        $userInfo = Db::table('resty_open_user')->where('id', $userId)->find();
        return $this->fetch('', [
            'user' => $userInfo
        ]);
    }

    // 用户中心
    public function index()
    {
        $userId = session('open_user_id');
        $userInfo = Db::table('resty_open_user')->where('id', $userId)->find();
        return $this->fetch('', [
            'user' => $userInfo
        ]);
    }

    // 消息
    public function message()
    {
        return $this->fetch();
    }

    public function login()
    {
        return $this->fetch();
    }


    public function reg()
    {
        if (request()->isPost()) {
            $res = $this->open_user_db->emailRegister(input("post."));
            if ($res['valid']) {
                add_operation_log('注册成功');
                return $this->success("注册成功,",'/');
            } else {
                add_operation_log('注册失败');
                return $this->error("注册失败,",'business/user/reg');
            }
        }
        return $this->fetch();
    }

    /**
     *
     */
    public function ajaxRegister()
    {
        //1 验证数据
        if (request()->isAjax()) {
            $res = $this->open_user_db->emailRegister(input("post."));
            if ($res['valid']) {
                add_operation_log('注册成功');
                return json(true);
            } else {
                add_operation_log('注册失败');
                return json(false);
            }
        }
    }

    /*
 * 异步注册验证账号
*/
    public function registerCheckUser()
    {
        $email = input('post.email');
        $result = Db::table('resty_open_user')->where('email', $email)->find();
        //如果该邮箱已经被注册，则返回true
        if ($result) {
            echo 'false';
        } else {
            return 'true';
        }
        // 第六步，添加用户信息到数据库
        $insertData['account'] = $userJsonRes['login'];
        $insertData['open_id'] = $userJsonRes['id'];
        $insertData['password'] = md5('123456');
        $insertData['realname'] = $userJsonRes['name'];
        $insertData['nickname'] = $userJsonRes['login'];
        $insertData['avatar'] = $userJsonRes['avatar_url'];
        $insertData['email'] = $userJsonRes['email'];
        $insertData['company'] = $userJsonRes['company'];
        $insertData['address'] = $userJsonRes['location'];
        $insertData['site'] = $userJsonRes['blog'];
        $insertData['blog'] = $userJsonRes['blog'];
        $insertData['github'] = $userJsonRes['html_url'];
        $insertData['create_time'] = date("Y-m-d H:i:s");;
        $userId = Db::table('resty_open_user')->insertGetId($insertData);
        if ($userId) {
            // 记录session信息
            session('open_user_id', $userId);
            session('open_user_username', $userJsonRes['login']);
            return $this->redirect("/");
        } else {
            return $this->redirect("/");
        }
    }

    /**
     * 退出
     */
    public function logout()
    {
        session(null);
        return $this->redirect("/");
    }

    /**
     * 登陆
     */
    public function setting()
    {
        return $this->fetch();
    }
}