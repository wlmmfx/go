<?php
/** .-----------------------------------------------------------------------------------------------------------------
 * |  Github: https://github.com/Tinywan
 * |  Blog: http://www.cnblogs.com/Tinywan
 * |-------------------------------------------------------------------------------------------------------------------
 * |  Author: Tinywan(ShaoBo Wan)
 * |  DateTime: 2018/2/26 15:40
 * |  Mail: Overcome.wan@Gmail.com
 * |  Function: 网易云 https://netease.im/
 * '------------------------------------------------------------------------------------------------------------------*/

namespace app\frontend\controller;


use app\common\controller\BaseFrontendController;
use netease\YunXinIM;
use think\Db;

class NetEaseController extends BaseFrontendController
{
    private $_instance;
    private $_appKey = '49156424140926fc1f4d980a3752aca4';     // key
    private $_appSecret = 'a0c499dc9f2d';  // secret

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->_instance = new YunXinIM($this->_appKey, $this->_appSecret, 'curl');
    }

    /**
     * 创建云信ID
     * @param $userId
     * @return mixed
     */
    public function createAccId($userId)
    {
        $data = Db::name('open_user')->field('id accid,account,nickname name,avatar icon')->where('delete_time is NULL and id=' . $userId)->find();
        $token = md5($data['accid'] . 'tinywan123456');
        // 写入到云信服务器
        $accid = 'Tinywan_' . rand(000, 999) . $data['accid'];
        $name = $data['name'] . rand(000, 999);
        $icon = $data['icon'];
        $info = $this->_instance->createAccId($accid, $name, '{}', $icon, $token);
        return $info;
    }

    /**
     * 更新用户信息
     * @param $accid
     * @param $name
     * @param $icon
     * @param $sign
     * @param $email
     * @param $birth
     * @param $mobile
     * @param $gender
     * @param $ex
     * @return mixed
     */
    public function updateUinfos($accid, $name, $icon, $sign, $email, $birth, $mobile, $gender, $ex)
    {
        $info = $this->_instance->updateUinfo($accid, $name, $icon, $sign, $email, $birth, $mobile, $gender, $ex);
        return $info;
    }

    /**
     * 获取指定用户信息通过云信ID
     * https://www.tinywan.com/frontend/net_ease/getUniqueByAccId/id/123
     * @return mixed
     */
    public function getUniqueByAccId($accid)
    {
        $info = $this->_instance->getUinfoss(array($accid));
        return $info;
    }

    /**
     * @param $accid
     * @param $name
     * @return mixed
     */
    public function createChatRoom($accid, $name)
    {
        $info = $this->_instance->chatroomCreates($accid, $name);
        return $info;
    }

    // 查询聊天室
    public function findChatRoom()
    {
        $roomid = input('param.id');
        $info = $this->_instance->chatroomgets($roomid);
        print_r($info);
        return $info;
    }

    /**
     * 更新聊天室
     * @param $roomid  聊天室ID
     * @param $name    聊天室名称
     * @return array
     */
    public function updateChatRoom($roomid, $name)
    {
        $info = $this->_instance->chatroomUpdates($roomid, $name);
        return $info;
    }

    /**
     * 关闭聊天室
     * @param $roomid        聊天室ID
     * @param $operator      创建者ID
     */
    public function chatRoomToggleClose($roomid, $operator)
    {
        $info = $this->_instance->chatroomToggleCloses($roomid, $operator);
        return $info;
    }

    /**
     * 开启聊天室
     * @param $roomid
     * @param $operator
     * @return mixed
     */
    public function chatRoomToggleStat($roomid, $operator)
    {
        $info = $this->_instance->chatroomToggleStats($roomid, $operator);
        return $info;
    }

    /**
     * 云信消息抄送接口
     */
    public function receiveMsg()
    {
        $body = @file_get_contents('php://input');
        $data = json_decode($body, true);
        //file_put_contents('/data/server/work_justeasy_cn/debug.txt',$body);
        if ($data) {
            $d['eventType'] = $data['eventType'];
            $d['attach'] = $data['attach'];
            $d['ext'] = $data['ext'];
            $d['fromAccount'] = $data['fromAccount'];
            $d['fromAvator'] = $data['fromAvator'];
            $d['fromClientType'] = $data['fromClientType'];
            $d['fromExt'] = $data['fromExt'];
            $d['fromNick'] = $data['fromNick'];
            $d['msgTimestamp'] = $data['msgTimestamp'];
            $d['msgType'] = $data['msgType'];
            $d['msgidClient'] = $data['msgidClient'];
            $d['resendFlag'] = $data['resendFlag'];
            $d['roleInfoTimetag'] = $data['roleInfoTimetag'];
            $d['roomId'] = $data['roomId'];
            $d['antispam'] = $data['antispam'];
            $info = M('receivemsg')->add($d);
            if ($info) {
                echo 200;
            }
        } else {
            echo 500;
        }
    }

    /**
     *设置聊天室内用户角色
     * @param $roomid // 聊天室ID
     * @param $operator // 操作者账号accid   operator必须是创建者
     * @param $target // 被操作者账号accid
     * @param $opt
     *      1: 设置为管理员，operator必须是创建者
     * 2:设置普通等级用户，operator必须是创建者或管理员
     * -1:设为黑名单用户，operator必须是创建者或管理员
     * -2:设为禁言用户，operator必须是创建者或管理员
     * @param string $optvalue // true:设置；false:取消设置
     */
    public function chatroomSetMemberRole($roomid, $operator, $target, $opt, $optvalue)
    {
        $info = $this->_instance->chatroomSetMemberRoles($roomid, $operator, $target, $opt, $optvalue);
        return $info;
    }

    /**
     * ===================================================测试开始============================================
     * IM 聊天系统
     * 用户在第一次登陆的时候就应该创建云通信ID
     */
    public function imSystem($id)
    {
        $account = 'Tinywan_' . $id;
        $token = md5($id . 'tinywan123456');
        // 写入到云信服务器
        return $this->fetch('', [
            'appKey' => $this->_appKey,
            'account' => $account,
            'token' => $token,
        ]);
    }

    /**
     * 登陆界面（账号或者密码错误, 登录界面）
     * http://139.224.239.21:8182/webdemo/im/index.html
     * http://tinywan.com:8182/webdemo/im/main.html
     * @return mixed
     */
    public function userLogin()
    {
        $this->view->engine->layout(false);
        return $this->fetch();
    }

    /**
     * IM 添加好友 Tinywan_52 请求 Tinywan_60 为自己的好友
     * @return mixed
     */
    public function imAddFriend()
    {
        $accId = 'Tinywan_' . 52;
        $faccId = 'Tinywan_' . 60;
        $res = $this->_instance->addFriend($accId, $faccId, $type = '1', $msg = '我是52，请求加我为好友');
        halt($res);
    }

    /**
     * 同意添加
     */
    public function imIgnoreAddFriend()
    {
        $accId = 'Tinywan_' . 52;
        $faccId = 'Tinywan_' . 60;
        $res = $this->_instance->addFriend($accId, $faccId, $type = '2', $msg = '我是60，同意添加你为好的好友');
        halt($res);
    }

    /**
     * 获取好友关系
     */
    public function imGetFriend()
    {
        $accId = 'Tinywan_' . 52;
        $res = $this->_instance->getFriend($accId,$createTime='1443599631111');
        halt($res);
    }

    /**
     * 获取好友关系
     */
    public function imGetFriendInfo()
    {
        $accId = 'Tinywan_' . 60;
        $res = $this->_instance->getUinfoss(array($accId));
        halt($res);
    }

    /**
     * 创建云通信ID的时候，如果自己没有指定的还则要保存返回的token
     * @return mixed
     */
    public function userLogin111()
    {
        $userId = "Tinywan_52";
        $res = $this->getUniqueByAccId($userId);
        halt($res);
    }

    /**
     * 创建云信ID
     */
    public function test()
    {
        $userId = 60;
        $data = Db::name('open_user')->field('id accid,account,nickname name,avatar icon')->where('delete_time is NULL and id=' . $userId)->find();
        $token = md5($data['accid'] . 'tinywan123456');
        // 写入到云信服务器
        $accid = 'Tinywan_' . $data['accid'];
        $name = $data['name'];
        $icon = $data['icon'];
        $res = $this->_instance->createAccId($accid, $name, '{}', $icon, $token);
        if ($res['code'] != 200) exit("创建失败");
        halt($res['info']);
    }
}